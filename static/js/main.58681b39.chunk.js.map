{"version":3,"sources":["Components/UploadFile/Dropzone.js","Components/Charts/Charts.js","Components/Frames/Frames.js","Components/Snackbar/Snackbar.js","App.js","serviceWorker.js","index.js"],"names":["style","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","Dropzone","props","onDrop","useCallback","acceptedFiles","forEach","file","handleChange","handleClick","reader","FileReader","onloadend","setImage","result","readAsDataURL","useDropzone","noClick","noKeyboard","multiple","getRootProps","getInputProps","open","className","width","type","onClick","Charts","console","log","padding","option","tooltip","trigger","xAxis","data","timeRange","axisTick","alignWithLabel","axisPointer","link","xAxisIndex","yAxis","toolbox","left","feature","dataZoom","yAxisIndex","restore","saveAsImage","grid","show","series","dates","useStyles","makeStyles","theme","images","gridList","transform","header","marginBottom","Frames","classes","closestImgs","closest","map","tile","i","GridListTile","key","minWidth","src","image","alt","height","GridListTileBar","title","metadata","distance","farestImgs","farest","GridList","cols","quantity","cellHeight","SimpleSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","message","action","Fragment","IconButton","size","aria-label","fontSize","root","flexGrow","overflow","spacing","gridItem","spinner","App","useState","setFile","setData","sortedMetadata","setSorted","setClosest","setFarest","ready","setReady","showSpinner","setSpinner","setDates","setTimeRange","charts","setCharts","radius","setRadius","initialImage","setInitial","React","openSnackbar","setSnackbarOpen","handlePostData","a","alert","formData","FormData","append","fetch","method","body","response","json","sortData","error","handleGetData","frame","urlCreator","window","URL","webkitURL","file_path","frame_index","blob","imageUrl","createObjectURL","array","Object","values","sortedArr","sort","b","getFrames","nestData","closestFrames","slice","length","farestFrames","closestFramesData","farestFramesData","then","d","push","setTimeout","week","timeFormat","hour","flatdata","dateExtent","extent","Date","parse","appearance_time","range","concat","nested","nest","rollup","sum","nestHour","extentHours","keys","hourScale","timeHours","get","hourDates","test1","Grid","container","direction","justify","TextField","variant","id","label","value","onChange","event","target","Button","CircularProgress","separator","Typography","margin","reason","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.58681b39.chunk.js","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nconst style = {\r\n\tflex: 1,\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\talignItems: 'center',\r\n\tpaddingTop: '30px',\r\n\tpaddingBottom: '30px',\r\n\tpaddingLeft: 'auto',\r\n\tpaddingRight: 'auto',\r\n\tborderWidth: 2,\r\n\tborderRadius: 2,\r\n\tborderColor: '#eeeeee',\r\n\tborderStyle: 'dashed',\r\n\tbackgroundColor: '#fafafa',\r\n\tcolor: '#bdbdbd',\r\n\toutline: 'none',\r\n\ttransition: 'border .24s ease-in-out',\r\n  };\r\n  \r\n\r\nconst Dropzone = (props) => {\r\n\tconst onDrop = useCallback((acceptedFiles) => {\r\n\t  acceptedFiles.forEach((file) => {\r\n\t\tprops.handleChange(file)\r\n\t\tprops.handleClick()\r\n\t\tlet reader = new FileReader();\r\n\t\treader.onloadend = () => {\r\n\t\t\tprops.setImage(reader.result)\r\n\t\t}\r\n\t\treader.readAsDataURL(file)\r\n\t  })\r\n\t}, [])\r\n\t\r\n\tconst {\r\n\t\tacceptedFiles, \r\n\t\tgetRootProps, \r\n\t\tgetInputProps, \r\n\t\topen, \r\n\t} = useDropzone({\r\n\t\tonDrop, \r\n\t\tnoClick: true,\r\n\t\tnoKeyboard: true,\r\n\t\tmultiple: true\r\n\t})\r\n\r\n\t// const files = acceptedFiles.map(file => (\r\n\t// \t<li key={file.name}>\r\n\t// \t\t{file.name} - {file.size} bytes\r\n\t// \t</li>\r\n\t// ));\r\n\t\r\n\t// console.log(files)\r\n  \r\n\treturn (\r\n\t<section className=\"container\" style={{width: '100%'}}>\r\n\t  <div {...getRootProps({style})}>\r\n\t\t<input {...getInputProps()} />\r\n\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n\t\t<button type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n\t  </div>\r\n\t</section>\r\n\t)\r\n  }\r\n\r\nexport default Dropzone","// import React from 'react'\r\n// import ReactEcharts from \"echarts-for-react\";\r\n\r\n// const Charts = (props) => {\r\n//     console.log(\"GOT\", props)\r\n//     return (\r\n//         <div>\r\n//             <ReactEcharts\r\n//             option={{\r\n//               tooltip: {\r\n//                 trigger: 'axis',\r\n//                 axisPointer: {\r\n//                   animation: false\r\n//                 }\r\n//               },\r\n//               toolbox: {\r\n//         feature: {\r\n//             dataZoom: {\r\n//                 yAxisIndex: 'none'\r\n//             },\r\n//             restore: {},\r\n//             saveAsImage: {}\r\n//         }\r\n//     },\r\n//     axisPointer: {\r\n//         link: {xAxisIndex: 'all'}\r\n//     },\r\n//     // dataZoom: [\r\n//     //     {\r\n//     //         show: true,\r\n//     //         realtime: true,\r\n//     //         start: 30,\r\n//     //         end: 70,\r\n//     //         xAxisIndex: [0, 1]\r\n//     //     },\r\n//     //     {\r\n//     //         type: 'inside',\r\n//     //         realtime: true,\r\n//     //         start: 30,\r\n//     //         end: 70,\r\n//     //         xAxisIndex: [0, 1]\r\n//     //     }\r\n//     // ],\r\n//               legend: {\r\n//                 data: [\"check\", \"check1\", \"check\"],/*this.state.nestedData\r\n//                   .filter(d => d.key !== \"\")\r\n//                   .map(d => d.key),*/\r\n//                 left: 10\r\n//               },\r\n//               xAxis: {\r\n//                 type: \"category\",\r\n//                 data: props.timeRange\r\n//               },\r\n//               yAxis: {\r\n//                 type: \"value\"\r\n//               },\r\n//             //   series: props.dates\r\n//             //     .filter(d => d.key !== \"\")\r\n//             //     .map(d => {\r\n//             //     return {\r\n//             //       name: d.key,\r\n//             //       data: d.values,\r\n//             //       type: \"line\"\r\n//             //     }\r\n//             //   })\r\n//             series: [{ \r\n//             data: props.dates,\r\n//             type: \"line\"\r\n//           }]\r\n//             }}\r\n//           />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Charts\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Charts = (props) => {\r\n    console.log(\"GOT\", props)\r\n    return (\r\n        <div style={{padding: 20}}>\r\n          <ReactEcharts\r\n        option = {{\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n            data: props.timeRange,\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            }\r\n        },\r\n        axisPointer: {\r\n            link: {xAxisIndex: 'all'}\r\n        },\r\n        yAxis: {\r\n            // splitLine: {\r\n            //     show: false\r\n            // },\r\n            type: 'value'\r\n        },\r\n        toolbox: {\r\n            left: 'center',\r\n            feature: {\r\n                dataZoom: {\r\n                    yAxisIndex: 'none'\r\n                },\r\n                restore: {},\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        grid: {},\r\n        dataZoom: [{\r\n            show: true,\r\n        },{\r\n            type: 'inside'\r\n        }],\r\n        series: {\r\n            type: 'line',\r\n            data: props.dates\r\n        }\r\n    }}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  images: {\r\n    // height: 300,\r\n    // width: 350\r\n  },\r\n  gridList: {\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n    paddingRight: 20,\r\n    paddingLeft: 20,\r\n    paddingTop: 10\r\n  },\r\n  header : {\r\n      marginBottom: 0,\r\n      paddingLeft: 20\r\n  }\r\n}));\r\n\r\nconst Frames = (props) => {\r\n    const classes = useStyles();\r\n    let closestImgs = props.closest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i} style={{minWidth: 375}}>\r\n        <img src={tile.image} alt={i} style={{height: 300}} />\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\n    let farestImgs = props.farest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i} style={{minWidth: 375}}>\r\n        <img src={tile.image} alt={i} style={{height: 300}}/>\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\nreturn (\r\n  <div>\r\n    <h2 className={classes.header}>Closest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity || 1} cellHeight={300}>\r\n      {closestImgs}\r\n    </GridList>\r\n    <h2 className={classes.header}>Farthest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity || 1} cellHeight={300}>\r\n      {farestImgs}\r\n    </GridList>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Frames","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function SimpleSnackbar(props) {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={props.open}\r\n        autoHideDuration={6000}\r\n        onClose={props.handleClose}\r\n        message=\"File loaded\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={props.handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Dropzone from './Components/UploadFile/Dropzone'\r\nimport UploadEmbed from './Components/UploadEmbed/UploadEmbed'\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Charts from './Components/Charts/Charts'\r\nimport Frames from './Components/Frames/Frames'\r\nimport './App.css';\r\nimport {extent, timeFormat, range, sum, max, timeParse, scaleTime, timeHours, timeDays} from 'd3'\r\nimport {nest} from 'd3-collection'\r\nimport * as test from './test.json'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from './Components/Snackbar/Snackbar'\r\nimport { CSVLink  } from \"react-csv\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  gridItem: {\r\n    padding: theme.spacing(1),\r\n    width: '50%'\r\n  },\r\n  spinner: {\r\n    color: 'grey',\r\n    // right: 0,\r\n    // top: 0,\r\n    // margin: '15px',\r\n    // position: \"absolute\"\r\n    paddingLeft: 10\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const [embed, setEmbed] = useState('')\r\n  const [file, setFile] = useState(null)\r\n  const [data, setData] = useState(null)\r\n  const [sortedMetadata, setSorted] = useState(null)\r\n  const [closest, setClosest] = useState([])\r\n  const [farest, setFarest] = useState([])\r\n  const [ready, setReady] = useState(false)\r\n  const [quantity, setQuantity] = useState(3)\r\n  const [showSpinner, setSpinner] = useState(false)\r\n  const [dates, setDates] = useState(null)\r\n  const [timeRange, setTimeRange] = useState(null)\r\n  const [charts, setCharts] = useState(false)\r\n  const [radius, setRadius] = useState(0.93)\r\n  const [initialImage, setInitial] = useState(null)\r\n\r\n  // useEffect(() => {\r\n  //   setData(test.default)\r\n  // }, [])\r\n\r\n  const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n\r\n  const handleSnackbarClick = () => {\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleRadiusChange = (event) => {\r\n    setRadius(event.target.value)\r\n  }\r\n\r\n  const handleEmbedChange = (event) => {\r\n    setEmbed(event.target.value)\r\n  }\r\n\r\n  const handleFileChange = (file) => {\r\n    console.log(file)\r\n    setFile(file)\r\n  }\r\n\r\n  const handlePostData = async () => {\r\n    if (!file) {\r\n      alert(\"No file to upload\")\r\n      return 0\r\n    }\r\n    setSpinner(true)\r\n    console.log(\"Sending data\")\r\n    const formData = new FormData();\r\n\r\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\r\n    formData.append('action', 'faiss_search')\r\n    formData.append('table_name', 'lukoshko_with_arr_norm')\r\n    formData.append('index_filename', 'ktrk_index.faiss')\r\n    formData.append('radius', radius)\r\n    formData.append('file1', file, 'image.jpg');\r\n\r\n    \r\n    try {\r\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      let result = await response.json();\r\n      setData(result)\r\n      console.log(result)\r\n      sortData(result)\r\n        \r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  const handleGetData = async (frame) => {\r\n    console.log(\"Getting image\")\r\n    let urlCreator = window.URL || window.webkitURL;\r\n    const formData = new FormData();\r\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\r\n    formData.append('action', 'extract_frame')\r\n    formData.append('file_path', frame.file_path)\r\n    formData.append('frame_index', frame.frame_index)\r\n\r\n    try {\r\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      let result = await response.blob();\r\n      let imageUrl = urlCreator.createObjectURL(result);\r\n      console.log(\"RESPONSE\", result)\r\n      return {metadata: frame, image: imageUrl}\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  const sortData = (array) => {\r\n    let metadata = Object.values(array[0].metadata)\r\n    console.log(metadata)\r\n    const sortedArr = [...metadata].sort((a, b) => a.distance - b.distance)\r\n    setSorted(sortedArr)\r\n    getFrames(sortedArr)\r\n    nestData(sortedArr)\r\n  }\r\n\r\n  const getFrames = async (array) => {\r\n    // let closestFrames = sortedMetadata.slice(sortedMetadata.length-n)\r\n    // let farestFrames = sortedMetadata.slice(0, n)\r\n    let closestFrames = array.slice(array.length-quantity)\r\n    let farestFrames = array.slice(0, quantity)\r\n    console.log(\"closest\", closestFrames)\r\n    console.log(\"farest\", farestFrames)\r\n    let closestFramesData = []\r\n    let farestFramesData = []\r\n    await closestFrames.forEach(frame => handleGetData(frame).then(d => closestFramesData.push(d)))\r\n    await farestFrames.forEach(frame => handleGetData(frame).then(d => farestFramesData.push(d)))\r\n    setClosest(closestFramesData)\r\n    setFarest(farestFramesData)\r\n    setTimeout(() => setSpinner(false), 2000);\r\n  }\r\n\r\n  const nestData = (array) => {\r\n    let week = timeFormat(\"%U\");\r\n    let hour = timeFormat(\"%Y-%m-%d %H:00\");\r\n    let flatdata = array\r\n    let dateExtent = extent(flatdata, d => week(Date.parse(d.appearance_time)));\r\n    console.log(\"Time extent\", dateExtent)\r\n    let timeRange = range(dateExtent[0], dateExtent[1]).concat(dateExtent[1]);\r\n    console.log(timeRange)\r\n    let nested = nest().key(d => week(Date.parse(d.appearance_time)))\r\n                       .rollup(values => sum(values, d => +1))\r\n                       .map(flatdata)\r\n    console.log(\"NESTED\", nested)\r\n    let nestHour = nest().key(d => hour(Date.parse(d.appearance_time)))\r\n                       .rollup(values => sum(values, d => +1))\r\n                       .map(flatdata)\r\n    console.log(\"HOUR NEST\", nestHour)\r\n    let extentHours = extent(nestHour.keys())\r\n    console.log(extentHours)\r\n    // let timeScale = timeDays(new Date(extentHours[0]), new Date(extentHours[1]))\r\n    let timeScale = timeHours(new Date(extentHours[0]), new Date(extentHours[1])).concat(new Date(extentHours[1]))\r\n    let hourScale = timeScale.map(d => hour(d))\r\n\r\n    let dates = timeRange.map(d => (d < 10 ? nested.get('0' + d) : nested.get(d)) || 0)\r\n    let hourDates = hourScale.map(d => nestHour.get(d) || 0)\r\n    let test1 = nestHour.get(hourScale[0])\r\n    console.log(hourScale[3])\r\n    console.log(\"TEST\", test1)\r\n    console.log(dates)\r\n    console.log(hourDates)\r\n    // setDates(dates)\r\n    // setTimeRange(timeRange)\r\n    setDates(hourDates)\r\n    setTimeRange(hourScale)\r\n  }\r\n\r\n  const showImages = () => {\r\n    setReady(!ready)\r\n  }\r\n\r\n  const showCharts = () => {\r\n    setCharts(!charts)\r\n  }\r\n\r\n  let test_data = [\r\n    { firstname: \"Ahmed\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" },\r\n    { firstname: \"Raed\", lastname: \"Labes\", email: \"rl@smthing.co.com\" },\r\n    { firstname: \"Yezzi\", lastname: \"Min l3b\", email: \"ymin@cocococo.com\" }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        <Dropzone handleChange={handleFileChange} handleClick={handleSnackbarClick} setImage={setInitial} />\r\n      </Grid>\r\n      {/* <Grid container justify=\"center\" className={classes.gridItem}><UploadEmbed handleChange={handleEmbedChange} value={embed}/></Grid> */}\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        {initialImage ? <img src={initialImage} alt=\"initial_image\" style={{height: 300}} /> : null}\r\n      </Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        <TextField variant=\"outlined\" id=\"radius\" size=\"small\" label=\"Radius\" value={radius} onChange={handleRadiusChange} />\r\n        <Button variant=\"contained\" size=\"small\" onClick={() => handlePostData()}>Send Data</Button>\r\n        <div className={classes.spinner}>{showSpinner ? <CircularProgress size={32} style={{color: 'grey'}} /> : null}</div>\r\n      </Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        {sortedMetadata ? <CSVLink data={sortedMetadata} separator={\"\\t\"}>Download TSV</CSVLink> : null}\r\n      </Grid>\r\n    </Grid>\r\n    <div style={{padding: 20}}>\r\n      <Grid container justify=\"center\">\r\n      <Typography variant=\"h5\" style={{margin: 0, paddingRight: 10}}>Images</Typography>\r\n      <Button variant=\"contained\" size=\"small\" onClick={() => showImages(3)}>Show</Button>\r\n      </Grid>\r\n      {ready ? <Frames farest={farest} closest={closest} quantity={quantity} /> : null}\r\n    </div>\r\n    <div style={{padding: 20}}>\r\n      <Grid container justify=\"center\">\r\n      <Typography variant=\"h5\" style={{margin: 0, paddingRight: 10}}>Charts</Typography>\r\n      <Button variant=\"contained\" size=\"small\" onClick={() => showCharts()}>Show</Button>\r\n      </Grid>\r\n      {charts ? <Charts timeRange={timeRange} dates={dates}/> : null }\r\n    </div>\r\n      <Snackbar handleClose={handleSnackbarClose} open={openSnackbar} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}