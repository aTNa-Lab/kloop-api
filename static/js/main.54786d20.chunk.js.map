{"version":3,"sources":["Components/UploadFile/Dropzone.js","Components/UploadEmbed/UploadEmbed.js","Components/Charts/Charts.js","Components/Frames/Frames.js","Components/Snackbar/Snackbar.js","App.js","serviceWorker.js","index.js"],"names":["style","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","Dropzone","props","onDrop","useCallback","acceptedFiles","forEach","file","handleChange","handleClick","useDropzone","noClick","noKeyboard","multiple","getRootProps","getInputProps","open","className","width","type","onClick","UploadEmbed","TextareaAutosize","onChange","value","label","placeholder","variant","rowsMin","rowsMax","height","Charts","console","log","option","tooltip","trigger","xAxis","data","timeRange","yAxis","splitLine","show","toolbox","left","feature","dataZoom","yAxisIndex","restore","saveAsImage","series","dates","useStyles","makeStyles","theme","images","gridList","transform","padding","header","marginBottom","Frames","classes","closestImgs","closest","map","tile","i","GridListTile","key","src","image","alt","GridListTileBar","title","metadata","distance","farestImgs","farest","GridList","cols","quantity","cellHeight","SimpleSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","message","action","Fragment","IconButton","size","aria-label","fontSize","root","flexGrow","overflow","spacing","gridItem","spinner","right","top","margin","position","App","useState","embed","setEmbed","setFile","setData","setSorted","setClosest","setFarest","ready","setReady","showSpinner","setSpinner","setDates","setTimeRange","charts","setCharts","radius","setRadius","React","openSnackbar","setSnackbarOpen","handlePostData","a","alert","formData","FormData","append","fetch","method","body","response","json","result","sortData","error","handleGetData","frame","urlCreator","window","URL","webkitURL","file_path","frame_index","blob","imageUrl","createObjectURL","array","Object","values","sortedArr","sort","b","getFrames","nestData","closestFrames","slice","length","farestFrames","closestFramesData","farestFramesData","then","d","push","setTimeout","week","timeFormat","hour","flatdata","dateExtent","extent","Date","parse","appearance_time","range","concat","nested","nest","rollup","sum","nestHour","extentHours","keys","hourScale","timeDays","get","hourDates","test1","CircularProgress","Grid","container","direction","justify","event","target","TextField","id","reason","scaleTime","domain","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.54786d20.chunk.js","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nconst style = {\r\n\tflex: 1,\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\talignItems: 'center',\r\n\tpaddingTop: '30px',\r\n\tpaddingBottom: '30px',\r\n\tpaddingLeft: 'auto',\r\n\tpaddingRight: 'auto',\r\n\tborderWidth: 2,\r\n\tborderRadius: 2,\r\n\tborderColor: '#eeeeee',\r\n\tborderStyle: 'dashed',\r\n\tbackgroundColor: '#fafafa',\r\n\tcolor: '#bdbdbd',\r\n\toutline: 'none',\r\n\ttransition: 'border .24s ease-in-out',\r\n  };\r\n  \r\n\r\nconst Dropzone = (props) => {\r\n\tconst onDrop = useCallback((acceptedFiles) => {\r\n\t  acceptedFiles.forEach((file) => {\r\n\t\tprops.handleChange(file)\r\n\t\tprops.handleClick()\r\n\t  })\r\n\t}, [])\r\n\t\r\n\tconst {\r\n\t\tacceptedFiles, \r\n\t\tgetRootProps, \r\n\t\tgetInputProps, \r\n\t\topen, \r\n\t} = useDropzone({\r\n\t\tonDrop, \r\n\t\tnoClick: true,\r\n\t\tnoKeyboard: true,\r\n\t\tmultiple: true\r\n\t})\r\n\r\n\t// const files = acceptedFiles.map(file => (\r\n\t// \t<li key={file.name}>\r\n\t// \t\t{file.name} - {file.size} bytes\r\n\t// \t</li>\r\n\t// ));\r\n\t\r\n\t// console.log(files)\r\n  \r\n\treturn (\r\n\t<section className=\"container\" style={{width: '100%'}}>\r\n\t  <div {...getRootProps({style})}>\r\n\t\t<input {...getInputProps()} />\r\n\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n\t\t<button type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n\t  </div>\r\n\t</section>\r\n\t)\r\n  }\r\n\r\nexport default Dropzone","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nconst UploadEmbed = (props) => (\r\n    <TextareaAutosize\r\n    onChange={props.handleChange}\r\n    value={props.value}\r\n    label=\"Embedding\"\r\n    placeholder=\"Enter your embedding\"\r\n    variant=\"outlined\"\r\n    rowsMin={9}\r\n    rowsMax={9}\r\n    style={{width: '100%', height: '100%'}}\r\n    />\r\n)\r\n\r\nexport default UploadEmbed","// import React from 'react'\r\n// import ReactEcharts from \"echarts-for-react\";\r\n\r\n// const Charts = (props) => {\r\n//     console.log(\"GOT\", props)\r\n//     return (\r\n//         <div>\r\n//             <ReactEcharts\r\n//             option={{\r\n//               tooltip: {\r\n//                 trigger: 'axis',\r\n//                 axisPointer: {\r\n//                   animation: false\r\n//                 }\r\n//               },\r\n//               toolbox: {\r\n//         feature: {\r\n//             dataZoom: {\r\n//                 yAxisIndex: 'none'\r\n//             },\r\n//             restore: {},\r\n//             saveAsImage: {}\r\n//         }\r\n//     },\r\n//     axisPointer: {\r\n//         link: {xAxisIndex: 'all'}\r\n//     },\r\n//     // dataZoom: [\r\n//     //     {\r\n//     //         show: true,\r\n//     //         realtime: true,\r\n//     //         start: 30,\r\n//     //         end: 70,\r\n//     //         xAxisIndex: [0, 1]\r\n//     //     },\r\n//     //     {\r\n//     //         type: 'inside',\r\n//     //         realtime: true,\r\n//     //         start: 30,\r\n//     //         end: 70,\r\n//     //         xAxisIndex: [0, 1]\r\n//     //     }\r\n//     // ],\r\n//               legend: {\r\n//                 data: [\"check\", \"check1\", \"check\"],/*this.state.nestedData\r\n//                   .filter(d => d.key !== \"\")\r\n//                   .map(d => d.key),*/\r\n//                 left: 10\r\n//               },\r\n//               xAxis: {\r\n//                 type: \"category\",\r\n//                 data: props.timeRange\r\n//               },\r\n//               yAxis: {\r\n//                 type: \"value\"\r\n//               },\r\n//             //   series: props.dates\r\n//             //     .filter(d => d.key !== \"\")\r\n//             //     .map(d => {\r\n//             //     return {\r\n//             //       name: d.key,\r\n//             //       data: d.values,\r\n//             //       type: \"line\"\r\n//             //     }\r\n//             //   })\r\n//             series: [{ \r\n//             data: props.dates,\r\n//             type: \"line\"\r\n//           }]\r\n//             }}\r\n//           />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Charts\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Charts = (props) => {\r\n    console.log(\"GOT\", props)\r\n    return (\r\n        <div>\r\n          <ReactEcharts\r\n        option = {{\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n            data: props.timeRange\r\n        },\r\n        yAxis: {\r\n            splitLine: {\r\n                show: false\r\n            }\r\n        },\r\n        toolbox: {\r\n            left: 'center',\r\n            feature: {\r\n                dataZoom: {\r\n                    yAxisIndex: 'none'\r\n                },\r\n                restore: {},\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        dataZoom: [{\r\n            type: 'inside'\r\n        }],\r\n        series: {\r\n            type: 'line',\r\n            data: props.dates\r\n        }\r\n    }}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  images: {\r\n    // height: 300,\r\n    // width: 350\r\n  },\r\n  gridList: {\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n    padding: 20\r\n  },\r\n  header : {\r\n      marginBottom: 0\r\n  }\r\n}));\r\n\r\nconst Frames = (props) => {\r\n    const classes = useStyles();\r\n    let closestImgs = props.closest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i} style={{width: 375}}>\r\n        <img src={tile.image} alt={i} />\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\n    let farestImgs = props.farest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i} style={{width: 375}}>\r\n        <img src={tile.image} alt={i} />\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\nreturn (\r\n  <div>\r\n    <h2 className={classes.header}>Closest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity || 1} cellHeight={300}>\r\n      {closestImgs}\r\n    </GridList>\r\n    <h2 className={classes.header}>Farthest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity || 1} cellHeight={300}>\r\n      {farestImgs}\r\n    </GridList>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Frames","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function SimpleSnackbar(props) {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={props.open}\r\n        autoHideDuration={6000}\r\n        onClose={props.handleClose}\r\n        message=\"File loaded\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={props.handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Dropzone from './Components/UploadFile/Dropzone'\r\nimport UploadEmbed from './Components/UploadEmbed/UploadEmbed'\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Charts from './Components/Charts/Charts'\r\nimport Frames from './Components/Frames/Frames'\r\nimport './App.css';\r\nimport {extent, timeFormat, range, sum, max, timeParse, scaleTime, timeDays} from 'd3'\r\nimport {nest} from 'd3-collection'\r\nimport * as test from './test.json'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from './Components/Snackbar/Snackbar'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  gridItem: {\r\n    padding: theme.spacing(1),\r\n    width: '50%'\r\n  },\r\n  spinner: {\r\n    color: 'grey',\r\n    right: 0,\r\n    top: 0,\r\n    margin: '15px',\r\n    position: \"absolute\"\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const [embed, setEmbed] = useState('')\r\n  const [file, setFile] = useState(null)\r\n  const [data, setData] = useState(null)\r\n  const [sortedMetadata, setSorted] = useState(null)\r\n  const [closest, setClosest] = useState([])\r\n  const [farest, setFarest] = useState([])\r\n  const [ready, setReady] = useState(false)\r\n  const [quantity, setQuantity] = useState(3)\r\n  const [showSpinner, setSpinner] = useState(false)\r\n  const [dates, setDates] = useState(null)\r\n  const [timeRange, setTimeRange] = useState(null)\r\n  const [charts, setCharts] = useState(false)\r\n  const [radius, setRadius] = useState(0.93)\r\n\r\n  // useEffect(() => {\r\n  //   setData(test.default)\r\n  // }, [])\r\n\r\n  const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n\r\n  const handleSnackbarClick = () => {\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleRadiusChange = (event) => {\r\n    setRadius(event.target.value)\r\n  }\r\n\r\n  const handleEmbedChange = (event) => {\r\n    setEmbed(event.target.value)\r\n  }\r\n\r\n  const handleFileChange = (file) => {\r\n    console.log(file)\r\n    setFile(file)\r\n  }\r\n\r\n  const handlePostData = async () => {\r\n    if (!file) {\r\n      alert(\"No file to upload\")\r\n      return 0\r\n    }\r\n    setSpinner(true)\r\n    console.log(\"Sending data\")\r\n    const formData = new FormData();\r\n\r\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\r\n    formData.append('action', 'faiss_search')\r\n    formData.append('table_name', 'lukoshko_with_arr_norm')\r\n    formData.append('index_filename', 'ktrk_index.faiss')\r\n    formData.append('radius', radius)\r\n    formData.append('file1', file, 'image.jpg');\r\n\r\n    \r\n    try {\r\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      let result = await response.json();\r\n      setData(result)\r\n      console.log(result)\r\n      sortData(result)\r\n        \r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  const handleGetData = async (frame) => {\r\n    console.log(\"Getting image\")\r\n    let urlCreator = window.URL || window.webkitURL;\r\n    const formData = new FormData();\r\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\r\n    formData.append('action', 'extract_frame')\r\n    formData.append('file_path', frame.file_path)\r\n    formData.append('frame_index', frame.frame_index)\r\n\r\n    try {\r\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      let result = await response.blob();\r\n      let imageUrl = urlCreator.createObjectURL(result);\r\n      console.log(\"RESPONSE\", result)\r\n      return {metadata: frame, image: imageUrl}\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n    }\r\n  }\r\n\r\n  const sortData = (array) => {\r\n    let metadata = Object.values(array[0].metadata)\r\n    console.log(metadata)\r\n    const sortedArr = [...metadata].sort((a, b) => a.distance - b.distance)\r\n    setSorted(sortedArr)\r\n    getFrames(sortedArr)\r\n    nestData(sortedArr)\r\n  }\r\n\r\n  const getFrames = async (array) => {\r\n    // let closestFrames = sortedMetadata.slice(sortedMetadata.length-n)\r\n    // let farestFrames = sortedMetadata.slice(0, n)\r\n    let closestFrames = array.slice(array.length-quantity)\r\n    let farestFrames = array.slice(0, quantity)\r\n    console.log(\"closest\", closestFrames)\r\n    console.log(\"farest\", farestFrames)\r\n    let closestFramesData = []\r\n    let farestFramesData = []\r\n    await closestFrames.forEach(frame => handleGetData(frame).then(d => closestFramesData.push(d)))\r\n    await farestFrames.forEach(frame => handleGetData(frame).then(d => farestFramesData.push(d)))\r\n    setClosest(closestFramesData)\r\n    setFarest(farestFramesData)\r\n    setTimeout(() => setSpinner(false), 2000);\r\n  }\r\n\r\n  const nestData = (array) => {\r\n    let week = timeFormat(\"%U\");\r\n    let hour = timeFormat(\"%Y-%m-%d\");\r\n    let flatdata = array\r\n    let dateExtent = extent(flatdata, d => week(Date.parse(d.appearance_time)));\r\n    console.log(\"Time extent\", dateExtent)\r\n    let timeRange = range(dateExtent[0], dateExtent[1]).concat(dateExtent[1]);\r\n    console.log(timeRange)\r\n    let nested = nest().key(d => week(Date.parse(d.appearance_time)))\r\n                       .rollup(values => sum(values, d => +1))\r\n                       .map(flatdata)\r\n    console.log(\"NESTED\", nested)\r\n    let nestHour = nest().key(d => hour(Date.parse(d.appearance_time)))\r\n                       .rollup(values => sum(values, d => +1))\r\n                       .map(flatdata)\r\n    console.log(\"HOUR NEST\", nestHour)\r\n    let extentHours = extent(nestHour.keys())\r\n    console.log(extentHours)\r\n    let timeScale = timeDays(new Date(extentHours[0]), new Date(extentHours[1]))\r\n    let hourScale = timeScale.map(d => hour(d))\r\n\r\n    let dates = timeRange.map(d => (d < 10 ? nested.get('0' + d) : nested.get(d)) || 0)\r\n    let hourDates = hourScale.map(d => nestHour.get(d) || 0)\r\n    let test1 = nestHour.get(hourScale[0])\r\n    console.log(hourScale[3])\r\n    console.log(\"TEST\", test1)\r\n    console.log(dates)\r\n    console.log(hourDates)\r\n    // setDates(dates)\r\n    // setTimeRange(timeRange)\r\n    setDates(hourDates)\r\n    setTimeRange(hourScale)\r\n  }\r\n\r\n  const showImages = () => {\r\n    setReady(!ready)\r\n  }\r\n\r\n  const showCharts = () => {\r\n    setCharts(!charts)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <div className={classes.spinner}>{showSpinner ? <CircularProgress size={32} style={{color: 'grey'}} /> : null}</div>\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        <Dropzone handleChange={handleFileChange} handleClick={handleSnackbarClick} />\r\n      </Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}><UploadEmbed handleChange={handleEmbedChange} value={embed}/></Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}>\r\n        <TextField id=\"radius\" size=\"small\" label=\"Radius\" value={radius} onChange={handleRadiusChange} />\r\n        <button onClick={() => handlePostData()}>Send Data</button>\r\n      </Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}><button onClick={() => showImages(3)}>Show Images</button></Grid>\r\n      <Grid container justify=\"center\" className={classes.gridItem}><button onClick={() => showCharts()}>Show Charts</button></Grid>\r\n      {ready ? <Frames farest={farest} closest={closest} quantity={quantity} /> : null}\r\n    </Grid>\r\n      {charts ? <Charts timeRange={timeRange} dates={dates}/> : null }\r\n      <Snackbar handleClose={handleSnackbarClose} open={openSnackbar} />\r\n      <button onClick={() => console.log(scaleTime().domain())}>SCALE TIME TEST</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}