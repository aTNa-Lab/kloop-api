{"version":3,"sources":["Components/UploadFile/Dropzone.js","Components/UploadEmbed/UploadEmbed.js","Components/Charts/Charts.js","Components/Frames/Frames.js","App.js","serviceWorker.js","index.js"],"names":["style","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","Dropzone","props","onDrop","useCallback","acceptedFiles","forEach","file","handleChange","useDropzone","noClick","noKeyboard","multiple","getRootProps","getInputProps","open","className","width","type","onClick","UploadEmbed","TextareaAutosize","onChange","value","label","placeholder","variant","rowsMin","rowsMax","height","Charts","console","log","option","tooltip","trigger","axisPointer","animation","legend","data","left","xAxis","timeRange","yAxis","series","dates","useStyles","makeStyles","theme","images","Frames","classes","closestImgs","closest","map","tile","i","GridListTile","key","src","image","alt","GridListTileBar","title","metadata","distance","farestImgs","farest","GridList","gridList","cols","quantity","cellHeight","root","flexGrow","overflow","padding","spacing","gridItem","transform","spinner","right","top","margin","position","App","useState","embed","setEmbed","setFile","setData","setSorted","setClosest","setFarest","ready","setReady","showSpinner","setSpinner","setDates","setTimeRange","charts","setCharts","handlePostData","a","formData","FormData","append","fetch","method","body","response","json","result","sortData","error","handleGetData","frame","urlCreator","window","URL","webkitURL","file_path","frame_index","blob","imageUrl","createObjectURL","array","Object","values","sortedArr","sort","b","getFrames","nestData","closestFrames","slice","length","farestFrames","closestFramesData","farestFramesData","then","d","push","setTimeout","week","timeFormat","flatdata","dateExtent","extent","Date","parse","appearance_time","maxDate","max","range","concat","nested","nest","rollup","sum","get","CircularProgress","size","Grid","container","direction","justify","event","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ca0460ac.chunk.js","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nconst style = {\r\n\tflex: 1,\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\talignItems: 'center',\r\n\tpaddingTop: '30px',\r\n\tpaddingBottom: '30px',\r\n\tpaddingLeft: 'auto',\r\n\tpaddingRight: 'auto',\r\n\tborderWidth: 2,\r\n\tborderRadius: 2,\r\n\tborderColor: '#eeeeee',\r\n\tborderStyle: 'dashed',\r\n\tbackgroundColor: '#fafafa',\r\n\tcolor: '#bdbdbd',\r\n\toutline: 'none',\r\n\ttransition: 'border .24s ease-in-out',\r\n  };\r\n  \r\n\r\nconst Dropzone = (props) => {\r\n\tconst onDrop = useCallback((acceptedFiles) => {\r\n\t  acceptedFiles.forEach((file) => {\r\n\t\tprops.handleChange(file)\r\n\t  })\r\n\t}, [])\r\n\t\r\n\tconst {\r\n\t\tacceptedFiles, \r\n\t\tgetRootProps, \r\n\t\tgetInputProps, \r\n\t\topen, \r\n\t} = useDropzone({\r\n\t\tonDrop, \r\n\t\tnoClick: true,\r\n\t\tnoKeyboard: true,\r\n\t\tmultiple: true\r\n\t})\r\n\r\n\t// const files = acceptedFiles.map(file => (\r\n\t// \t<li key={file.name}>\r\n\t// \t\t{file.name} - {file.size} bytes\r\n\t// \t</li>\r\n\t// ));\r\n\t\r\n\t// console.log(files)\r\n  \r\n\treturn (\r\n\t<section className=\"container\" style={{width: '100%'}}>\r\n\t  <div {...getRootProps({style})}>\r\n\t\t<input {...getInputProps()} />\r\n\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n\t\t<button type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n\t  </div>\r\n\t</section>\r\n\t)\r\n  }\r\n\r\nexport default Dropzone","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nconst UploadEmbed = (props) => (\r\n    <TextareaAutosize\r\n    onChange={props.handleChange}\r\n    value={props.value}\r\n    label=\"Embedding\"\r\n    placeholder=\"Enter your embedding\"\r\n    variant=\"outlined\"\r\n    rowsMin={9}\r\n    rowsMax={9}\r\n    style={{width: '100%', height: '100%'}}\r\n    />\r\n)\r\n\r\nexport default UploadEmbed","import React from 'react'\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Charts = (props) => {\r\n    console.log(\"GOT\", props)\r\n    return (\r\n        <div>\r\n            <ReactEcharts\r\n            option={{\r\n              tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                  animation: false\r\n                }\r\n              },\r\n              legend: {\r\n                data: [\"check\", \"check1\", \"check\"],/*this.state.nestedData\r\n                  .filter(d => d.key !== \"\")\r\n                  .map(d => d.key),*/\r\n                left: 10\r\n              },\r\n              xAxis: {\r\n                type: \"category\",\r\n                data: props.timeRange\r\n              },\r\n              yAxis: {\r\n                type: \"value\"\r\n              },\r\n            //   series: props.dates\r\n            //     .filter(d => d.key !== \"\")\r\n            //     .map(d => {\r\n            //     return {\r\n            //       name: d.key,\r\n            //       data: d.values,\r\n            //       type: \"line\"\r\n            //     }\r\n            //   })\r\n            series: [{ \r\n            data: props.dates,\r\n            type: \"line\"\r\n          }]\r\n            }}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  images: {\r\n    height: 300\r\n  }\r\n}));\r\n\r\nconst Frames = (props) => {\r\n    const classes = useStyles();\r\n    let closestImgs = props.closest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i}>\r\n        <img src={tile.image} alt={i} className={classes.images} />\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\n    let farestImgs = props.farest.map((tile, i) => {\r\n      return(\r\n      <GridListTile key={i}>\r\n        <img src={tile.image} alt={i} className={classes.images} />\r\n        <GridListTileBar\r\n          title={tile.metadata.distance}\r\n        />\r\n      </GridListTile>\r\n    )})\r\nreturn (\r\n  <div>\r\n    <h2>Closest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity} cellHeight=\"auto\">\r\n      {closestImgs}\r\n    </GridList>\r\n    <h2>Farest</h2>\r\n    <GridList className={classes.gridList} cols={props.quantity} cellHeight=\"auto\">\r\n      {farestImgs}\r\n    </GridList>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Frames","import React, { useState, useEffect } from 'react';\nimport Dropzone from './Components/UploadFile/Dropzone'\nimport UploadEmbed from './Components/UploadEmbed/UploadEmbed'\nimport { Button, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Charts from './Components/Charts/Charts'\nimport Frames from './Components/Frames/Frames'\nimport ReactEcharts from \"echarts-for-react\";\nimport './App.css';\nimport {extent, timeFormat, range, sum, max} from 'd3'\nimport {nest} from 'd3-collection'\nimport * as test from './test.json'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  gridItem: {\n    padding: theme.spacing(1),\n    width: '50%'\n  },\n  gridList: {\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  images: {\n    height: 300\n  },\n  spinner: {\n    color: 'grey',\n    right: 0,\n    top: 0,\n    margin: '15px',\n    position: \"absolute\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [embed, setEmbed] = useState('')\n  const [file, setFile] = useState(null)\n  const [data, setData] = useState(null)\n  const [sortedMetadata, setSorted] = useState(null)\n  const [closest, setClosest] = useState([])\n  const [farest, setFarest] = useState([])\n  const [ready, setReady] = useState(false)\n  const [quantity, setQuantity] = useState(3)\n  const [showSpinner, setSpinner] = useState(false)\n  const [dates, setDates] = useState(null)\n  const [timeRange, setTimeRange] = useState(null)\n  const [charts, setCharts] = useState(false)\n\n  // useEffect(() => {\n  //   setData(test.default)\n  // }, [])\n  \n\n  const handleEmbedChange = (event) => {\n    setEmbed(event.target.value)\n  }\n\n  const handleFileChange = (file) => {\n    console.log(file)\n    setFile(file)\n  }\n\n  const handlePostData = async () => {\n    setSpinner(true)\n    console.log(\"Sending data\")\n    const formData = new FormData();\n\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\n    formData.append('action', 'faiss_search')\n    formData.append('table_name', 'lukoshko_with_arr_norm')\n    formData.append('index_filename', 'ktrk_index.faiss')\n    formData.append('radius', 0.93)\n    formData.append('file1', file, 'image.jpg');\n\n    \n    try {\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\n        method: 'POST',\n        body: formData\n      });\n      let result = await response.json();\n      setData(result)\n      console.log(result)\n      sortData(result)\n        \n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  }\n\n  const handleGetData = async (frame) => {\n    console.log(\"Getting image\")\n    let urlCreator = window.URL || window.webkitURL;\n    const formData = new FormData();\n    formData.append('token', 'TDlRJi8ORMGVrMedVkZDXsUDK')\n    formData.append('action', 'extract_frame')\n    formData.append('file_path', frame.file_path)\n    formData.append('frame_index', frame.frame_index)\n\n    try {\n      const response = await fetch('https://9e94093f8750.sn.mynetname.net:5000/', {\n        method: 'POST',\n        body: formData\n      });\n      \n      let result = await response.blob();\n      let imageUrl = urlCreator.createObjectURL(result);\n      console.log(\"RESPONSE\", result)\n      return {metadata: frame, image: imageUrl}\n\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  }\n\n  const sortData = (array) => {\n    let metadata = Object.values(array[0].metadata)\n    console.log(metadata)\n    const sortedArr = [...metadata].sort((a, b) => a.distance - b.distance)\n    setSorted(sortedArr)\n    getFrames(sortedArr)\n    nestData(sortedArr)\n  }\n\n  const getFrames = (array) => {\n    // let closestFrames = sortedMetadata.slice(sortedMetadata.length-n)\n    // let farestFrames = sortedMetadata.slice(0, n)\n    let closestFrames = array.slice(array.length-quantity)\n    let farestFrames = array.slice(0, quantity)\n    console.log(\"closest\", closestFrames)\n    console.log(\"farest\", farestFrames)\n    let closestFramesData = []\n    let farestFramesData = []\n    closestFrames.forEach(frame => handleGetData(frame).then(d => closestFramesData.push(d)))\n    farestFrames.forEach(frame => handleGetData(frame).then(d => farestFramesData.push(d)))\n    setClosest(closestFramesData)\n    setFarest(farestFramesData)\n    setTimeout(() => setSpinner(false), 2000);\n  }\n\n  const nestData = (array) => {\n    let week = timeFormat(\"%U\");\n    let flatdata = array\n    let dateExtent = extent(flatdata, d => week(Date.parse(d.appearance_time)));\n    console.log(\"Time extent\", dateExtent)\n    let maxDate = week(max(flatdata, d => new Date(d.appearance_time)))\n    console.log(\"MAX\", maxDate)\n    let timeRange = range(dateExtent[0], dateExtent[1]).concat(maxDate);\n    console.log(timeRange)\n    let nested = nest().key(d => week(Date.parse(d.appearance_time)))\n                       .rollup(values => sum(values, d => +1))\n                       .map(flatdata)\n    console.log(\"NESTED\", nested)\n    let dates = timeRange.map(d => (d < 10 ? nested.get('0' + d) : nested.get(d)) || 0)\n    console.log(dates)\n    setDates(dates)\n    setTimeRange(timeRange)\n  }\n\n  const showImages = () => {\n    setReady(!ready)\n  }\n\n  const showCharts = () => {\n    setCharts(!charts)\n  }\n\n\n  return (\n    <div className=\"App\">\n    <div className={classes.spinner}>{showSpinner ? <CircularProgress size={32} style={{color: 'grey'}} /> : null}</div>\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Grid container justify=\"center\" className={classes.gridItem}><Dropzone handleChange={handleFileChange} /></Grid>\n      <Grid container justify=\"center\" className={classes.gridItem}><UploadEmbed handleChange={handleEmbedChange} value={embed}/></Grid>\n      <Grid container justify=\"center\" className={classes.gridItem}><button onClick={() => handlePostData()}>Send Data</button></Grid>\n      <Grid container justify=\"center\" className={classes.gridItem}><button onClick={() => showImages(3)}>Show Images</button></Grid>\n      <Grid container justify=\"center\" className={classes.gridItem}><button onClick={() => showCharts()}>Show Charts</button></Grid>\n    </Grid>\n      {ready ? <Frames farest={farest} closest={closest} quantity={quantity} /> : null}\n      {charts ? <Charts timeRange={timeRange} dates={dates}/> : null }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}